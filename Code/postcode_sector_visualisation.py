# This file is a template that takes a dataset with observations corresponding to postcode sectors, and makes a map that colours in all postcode sectors contained in the data
# It is used to produce Figure 7 and the maps in Appendix 6, visualising the control zones generated by the k-means matching algorithm

# It needs to take place within the ArcGIS project titled 'postcode_sector_visualisation'

# First ensure the basemap XY coordinate system is set to WGS 1984 Web Mercator (auxiliary sphere)

# This example illustrates its use taking the 'matched_pcsects_2021_kmeans_vis.xlsx' file as input, and producing a coloured shapefile named 'postcode_sectors_select_2021' which can then be exported as a map

#---------------------------------#
# Import the data
#---------------------------------#

# Import the postcode sector borders
postcode_sectors = r"C:\Users\jpmcl\OneDrive\Documents\Economics\Papers\ULEZ on house prices\Data\Input\GB_Postcodes\PostalSector.shp"
postcode_sectors = arcpy.management.MakeFeatureLayer(postcode_sectors, "postcode_sectors")

# Import the postcode sector data from excel
arcpy.conversion.ExcelToTable(
    Input_Excel_File=r"C:\Users\jpmcl\OneDrive\Documents\Economics\Papers\ULEZ on house prices\Data\Temp\matched_pcsects_2021_kmeans_vis.xlsx",
    Output_Table=r"C:\Users\jpmcl\OneDrive\Documents\ArcGIS\Projects\postcode_sector_visualisation\postcode_sector_visualisation.gdb\sectors_data",
    Sheet="",
    field_names_row=1,
    cell_range=""
)

#---------------------------------#
# Merge the two together on a common field
#---------------------------------#

arcpy.management.JoinField(
    in_data="postcode_sectors",
    in_field="RMSect",
    join_table="sectors_data",
    join_field="pcsect_original",
    fields=None,
    fm_option="NOT_USE_FM",
    field_mapping=None,
    index_join_fields="NO_INDEXES"
)

#---------------------------------#
# Colour in only those with data merged
#---------------------------------#

# Make a subset of this data that gives only matched pcsects
arcpy.analysis.Select(
    in_features="postcode_sectors",
    out_feature_class=r"C:\Users\jpmcl\OneDrive\Documents\ArcGIS\Projects\postcode_sector_visualisation\postcode_sector_visualisation.gdb\postcode_sectors_select_2021",
    where_clause="tag > 0"
    # where_clause="tag IS NOT NULL AND tag <> ''"
)
# note that arcgis saves past field changes to the shapefile on disk: as such, it is necessary to either redownload the shapefile or rename the tag variable to whatever it most recently was merged as

# Delete the original postcode sectors layer
arcpy.management.Delete(
    in_data="postcode_sectors",
    data_type=""
)



#----------------------------------#
# Create and export a nice graph
#----------------------------------#

# Make border thin, colour vivid
# Then export the map as a pdf file (share > export map)